#!/usr/bin/env node

import fs from 'fs';
import path from 'path';
import colors from 'colors';

import malwarePkgs from './malware-pkgs.json';

const ROOT_PATH = require('get-root-path').rootPath;
const PKG_JSON_FILE = 'package.json';


const file = path.join(ROOT_PATH, PKG_JSON_FILE);

colors.setTheme({
  info: 'green',
  warn: 'yellow',
  error: 'red'
});

const WARN_MYSTERIOUS = '[WARNING] you should check the following packages:'.error;
const THIS_IS_CLEAN = 'No mysterious packages found.'.info;
const NO_PKG_JSON = 'No package.json file found, this could be a bug in npm-malware-search package.'.warn;
const NKNWN = 'UNKNOWN ERROR :\'V'.error;

const isObject = obj => obj && Object.prototype.toString.call(obj) === '[object Object]'

export const getAllDependencies = pkgJson =>
  isObject(pkgJson) && Object.assign({}, pkgJson.dependencies, pkgJson.devDependencies) || false;

export const searchForPackages = allDeps =>
  isObject(allDeps) && Object.keys(allDeps).filter(pkg => malwarePkgs.indexOf(pkg) > 0) || false;

const log = text => console.log(text);

fs.stat(file, (err) => {
  if (!err) {
    const PKG_JSON = require(file)
    const allDeps = getAllDependencies(PKG_JSON);
    const foundPkgs = searchForPackages(allDeps);
    if (foundPkgs.length > 0) {
      log(WARN_MYSTERIOUS)
      log(...foundPkgs);
    } else {
      log(THIS_IS_CLEAN);
    }
  } else if (err.code === 'ENOENT') {
    log(NO_PKG_JSON);
  } else {
    log(NKNWN);
  }
});
