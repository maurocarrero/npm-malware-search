import { Left, Right } from 'data.either';
import { messages as msg, MALWARE_PKGS, PKG_JSON_FILE, NOT_FOUND } from './constants';

const isObject = obj => obj && Object.prototype.toString.call(obj) === '[object Object]'
const log = text => console.log(text);
export const requireFile = file => _ => require(file);

export const getAllDependencies = pkgJson =>
  isObject(pkgJson) && Object.assign({}, pkgJson.dependencies, pkgJson.devDependencies) || false;

export const searchForPackages = malwarePkgs => allDeps =>
  isObject(allDeps) && Object.keys(allDeps).filter(pkg => malwarePkgs.indexOf(pkg) > 0) || false;

export const logResults = foundPkgs => {
  if (foundPkgs.length > 0) {
    log(msg.WARN_MYSTERIOUS)
    log(...foundPkgs);
  } else {
    log(msg.THIS_IS_CLEAN);
  }
}
export const logError = err => log((err.code === NOT_FOUND) ? msg.NO_PKG_JSON : msg.NKNWN);

const tryCatch = fn => {
  try {
    return Right(fn())
  } catch (err) {
    return Left(err)
  }
}

const main = () =>
  tryCatch(requireFile(PKG_JSON_FILE))
    .map(getAllDependencies)
    .map(searchForPackages(MALWARE_PKGS))
    .map(logResults)
    .orElse(logError);

export default main;
